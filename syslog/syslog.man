


SYSLOG(3)              C LIBRARY FUNCTIONS              SYSLOG(3)



NAME
     syslog, openlog, closelog, setlogmask - control system log

SYNOPSIS
     #include <syslog.h>

     openlog(ident, logopt, facility)
     char *ident;

     syslog(priority, message, parameters ... )
     char *message;

     closelog()

     setlogmask(maskpri)

DESCRIPTION
     syslog() passes _m_e_s_s_a_g_e to syslogd(8), which logs it  in  an
     appropriate  system  log,  writes  it to the system console,
     forwards it to a list of users, or forwards it to  the  sys-
     logd  on  another  host  over  the  network.  The message is
     tagged with a priority of _p_r_i_o_r_i_t_y.  The message looks  like
     a  printf(3V)  string  except  that  %m  is  replaced by the
     current error message (collected from  errno).   A  trailing
     NEWLINE is added if needed.

     Priorities are encoded as  a  _f_a_c_i_l_i_t_y  and  a  _l_e_v_e_l.   The
     facility  describes  the  part  of the system generating the
     message.  The level is selected from an ordered list:

          LOG_EMERG           A panic condition.   This  is  nor-
                              mally broadcast to all users.

          LOG_ALERT           A   condition   that   should    be
                              corrected  immediately,  such  as a
                              corrupted system database.

          LOG_CRIT            Critical conditions, such  as  hard
                              device errors.

          LOG_ERR             Errors.

          LOG_WARNING         Warning messages.

          LOG_NOTICE          Conditions that are not error  con-
                              ditions,  but that may require spe-
                              cial handling.

          LOG_INFO            Informational messages.

          LOG_DEBUG           Messages that  contain  information
                              normally of use only when debugging



Sun Release 4.1   Last change: 22 November 1987                 1






SYSLOG(3)              C LIBRARY FUNCTIONS              SYSLOG(3)



                              a program.

     If special processing is needed, openlog() can be called  to
     initialize  the  log  file.  The parameter _i_d_e_n_t is a string
     that is prepended to every message.  _l_o_g_o_p_t is a  bit  field
     indicating logging options.  Current values for _l_o_g_o_p_t are:

          LOG_PID             Log the process ID with  each  mes-
                              sage.  This is useful for identify-
                              ing specific daemon processes  (for
                              daemons that fork).

          LOG_CONS            Write messages to the  system  con-
                              sole if they cannot be sent to sys-
                              logd.  This option is safe  to  use
                              in  daemon  processes  that have no
                              controlling  terminal,  since  sys-
                              log() forks before opening the con-
                              sole.

          LOG_NDELAY          Open  the  connection  to   syslogd
                              immediately.   Normally the open is
                              delayed until the first message  is
                              logged.   This  is  useful for pro-
                              grams that need to manage the order
                              in which file descriptors are allo-
                              cated.

          LOG_NOWAIT          Do not  wait  for  child  processes
                              that  have  been forked to log mes-
                              sages  onto  the   console.    This
                              option  should be used by processes
                              that enable notification  of  child
                              termination  using  SIGCHLD,  since
                              syslog() may otherwise block  wait-
                              ing  for  a child whose exit status
                              has already been collected.

     The _f_a_c_i_l_i_t_y parameter encodes  a  default  facility  to  be
     assigned to all messages that do not have an explicit facil-
     ity already encoded:

          LOG_KERN            Messages generated by  the  kernel.
                              These  cannot  be  generated by any
                              user processes.

          LOG_USER            Messages generated by  random  user
                              processes.   This  is  the  default
                              facility  identifier  if  none   is
                              specified.

          LOG_MAIL            The mail system.



Sun Release 4.1   Last change: 22 November 1987                 2






SYSLOG(3)              C LIBRARY FUNCTIONS              SYSLOG(3)



          LOG_DAEMON          System daemons, such  as  ftpd(8C),
                              routed(8C), etc.

          LOG_AUTH            The authorization system: login(1),
                              su(1V), getty(8), etc.

          LOG_LPR             The line printer  spooling  system:
                              lpr(1), lpc(8), lpd(8), etc.

          LOG_NEWS            Reserved  for  the  USENET  network
                              news system.

          LOG_UUCP            Reserved for the  UUCP  system;  it
                              does not currently use syslog.

          LOG_CRON            The cron/at  facility;  crontab(1),
                              at(1), cron(8), etc.

          LOG_LOCAL0-7        Reserved for local use.

     closelog() can be used to close the log file.

     setlogmask() sets the  log  priority  mask  to  _m_a_s_k_p_r_i  and
     returns  the previous mask.  Calls to syslog() with a prior-
     ity not set in _m_a_s_k_p_r_i are rejected.  The mask for an  indi-
     vidual   priority   _p_r_i   is   calculated   by   the   macro
     LOG_MASK(_p_r_i); the mask for all priorities up to and includ-
     ing  _t_o_p_p_r_i  is  given  by  the macro LOG_UPTO(_t_o_p_p_r_i).  The
     default allows all priorities to be logged.

EXAMPLES
     This call logs a message at priority LOG_ALERT:

          syslog(LOG_ALERT, "who: internal error 23");

     The FTP daemon ftpd would make this  call  to  openlog()  to
     indicate  that all messages it logs should have an identify-
     ing string of ftpd, should be treated by  syslogd  as  other
     messages from system daemons are, should include the process
     ID of the process logging the message:

          openlog("ftpd", LOG_PID, LOG_DAEMON);

     Then it would make the following  call  to  setlogmask()  to
     indicate  that messages at priorities from LOG_EMERG through
     LOG_ERR should be logged, but that no messages at any  other
     priority should be logged:

          setlogmask(LOG_UPTO(LOG_ERR));

     Then, to log a message at priority LOG_INFO, it  would  make
     the following call to syslog:



Sun Release 4.1   Last change: 22 November 1987                 3






SYSLOG(3)              C LIBRARY FUNCTIONS              SYSLOG(3)



          syslog(LOG_INFO,  "Connection  from  host   %d",   Cal-
          lingHost);

     A locally-written utility could use the  following  call  to
     syslog() to log a message at priority LOG_INFO to be treated
     by syslogd as other messages to the facility LOG_LOCAL2 are:

          syslog(LOG_INFO|LOG_LOCAL2, "error: %m");

SEE ALSO
     at(1),  crontab(1),  logger(1),  login(1),  lpr(1),  su(1V),
     printf(3V),  syslog.conf(5),  cron(8),  ftpd(8C),  getty(8),
     lpc(8), lpd(8), routed(8C), syslogd(8)










































Sun Release 4.1   Last change: 22 November 1987                 4



